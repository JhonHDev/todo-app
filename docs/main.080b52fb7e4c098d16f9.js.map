{"version":3,"sources":["webpack://todo-app/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/createClass.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://todo-app/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://todo-app/./src/js/classes/counter/Counter.js","webpack://todo-app/./src/assets/images/icon-sun.svg","webpack://todo-app/./src/assets/images/icon-moon.svg","webpack://todo-app/./src/js/classes/dark-mode/DarkMode.js","webpack://todo-app/./src/js/classes/form/Form.js","webpack://todo-app/./src/js/classes/task/Task.js","webpack://todo-app/./src/js/classes/task-filter/TaskFIlter.js","webpack://todo-app/./src/js/classes/todo-list/TodoList.js","webpack://todo-app/./src/assets/images/icon-cross.svg","webpack://todo-app/./src/js/functions/taskTemplate.js","webpack://todo-app/./src/js/app.js","webpack://todo-app/./src/js/functions/loadApp.js","webpack://todo-app/./src/js/functions/formActions.js","webpack://todo-app/./src/js/functions/todoListActions.js","webpack://todo-app/./src/js/functions/deleteCompletedTasks.js"],"names":["module","exports","arr","len","length","i","arr2","Array","arrayLikeToArray","isArray","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","iter","Symbol","iterator","from","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","call","slice","constructor","name","test","this","counter","$counterContainer","document","getElementById","textContent","localStorage","setItem","JSON","stringify","getItem","parse","saveCounterValue","$body","body","$darkModeIcon","state","classList","toggle","add","remove","darkState","src","moonIcon","sunIcon","currentIcon","toggleDarkModeState","hasDarkMode","contains","saveDarkModeIconState","$form","$formCheck","FormData","get","reset","isCompleted","id","Date","now","$todoContainer","todoItem","isTodoItemCompleted","e","preventDefault","filterName","$todoItems","querySelectorAll","$optionLinks","map","forEach","option","filterForName","getTodoList","task","todos","saveTodoList","taskId","filter","$template","createElement","innerHTML","deleteIcon","firstElementChild","$btnClear","$filteringOptions","states","todoList","TodoList","taskFilter","TaskFilter","Counter","darkMode","DarkMode","querySelector","window","addEventListener","$newTaskTemplate","taskTemplate","insertAdjacentElement","getDarkModeState","getDarkModeIconState","getCounterValue","loadApp","myForm","Form","isCheckboxCompleted","newTask","Task","getInputValue","addTask","incrementCounter","formActions","isCheckButton","isDeleteButton","parentElement","Number","getAttribute","toggleTodoItemCompleted","deleteTask","decrementCounter","todoListActions","deleteCompletedTasks","getNameToFilter","toggleDarkModeIcon"],"mappings":"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","file":"main.080b52fb7e4c098d16f9.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","class Counter {\r\n  constructor() {\r\n    this.counter = 0;\r\n    this.$counterContainer = document.getElementById('todoCounter');\r\n    this.$counterContainer.textContent = this.counter;\r\n  }\r\n\r\n  saveCounterValue() {\r\n    localStorage.setItem('counter', JSON.stringify(this.counter));\r\n  }\r\n\r\n  getCounterValue() {\r\n    if (localStorage.getItem('counter')) {\r\n      this.counter = JSON.parse(localStorage.getItem('counter'));\r\n      this.$counterContainer.textContent = this.counter;\r\n    } else {\r\n      this.counter = 0;\r\n      this.$counterContainer.textContent = this.counter;\r\n    }\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.counter += 1;\r\n    this.$counterContainer.textContent = this.counter;\r\n    this.saveCounterValue();\r\n  }\r\n\r\n  decrementCounter() {\r\n    this.counter -= 1;\r\n    this.$counterContainer.textContent = this.counter;\r\n    this.saveCounterValue();\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","export default __webpack_public_path__ + \"assets/images/icon-sun.910b1f9a23741afc341e95653a51f14f.svg\";","export default __webpack_public_path__ + \"assets/images/icon-moon.6c03114b495d05f4380b3c544d9afe2a.svg\";","import sunIcon from '../../../assets/images/icon-sun.svg';\r\nimport moonIcon from '../../../assets/images/icon-moon.svg';\r\n\r\nclass DarkMode {\r\n  constructor() {\r\n    this.$body = document.body;\r\n    this.$darkModeIcon = document.getElementById('darkModeIcon');\r\n    this.state = false;\r\n  }\r\n\r\n  toggleDarkModeState() {\r\n    this.$body.classList.toggle('dark');\r\n    this.state = !this.state;\r\n  }\r\n\r\n  getDarkModeState() {\r\n    const darkState = JSON.parse(localStorage.getItem('darkState'));\r\n\r\n    if (darkState) {\r\n      this.$body.classList.add('dark');\r\n    } else {\r\n      this.$body.classList.remove('dark');\r\n    }\r\n  }\r\n\r\n  saveDarkModeIconState() {\r\n    localStorage.setItem('darkState', JSON.stringify(this.state));\r\n  }\r\n\r\n  getDarkModeIconState() {\r\n    const darkState = JSON.parse(localStorage.getItem('darkState'));\r\n\r\n    if (darkState) {\r\n      this.$darkModeIcon.src = moonIcon;\r\n    } else {\r\n      this.$darkModeIcon.src = sunIcon;\r\n    }\r\n  }\r\n\r\n  toggleDarkModeIcon({ target }) {\r\n    const currentIcon = target;\r\n    currentIcon.classList.toggle('dark');\r\n\r\n    this.toggleDarkModeState();\r\n\r\n    const hasDarkMode = currentIcon.classList.contains('dark');\r\n\r\n    if (hasDarkMode) {\r\n      currentIcon.src = moonIcon;\r\n      this.saveDarkModeIconState(hasDarkMode);\r\n    } else {\r\n      currentIcon.src = sunIcon;\r\n      this.saveDarkModeIconState(hasDarkMode);\r\n    }\r\n  }\r\n}\r\n\r\nexport default DarkMode;\r\n","class Form {\r\n  constructor() {\r\n    this.$form = document.getElementById('form');\r\n    this.$formCheck = document.getElementById('formCheck');\r\n  }\r\n\r\n  getInputValue(value) {\r\n    const formData = new FormData(this.$form);\r\n    return formData.get(value);\r\n  }\r\n\r\n  reset() {\r\n    const isCheckboxCompleted = this.$formCheck.classList.contains('completed');\r\n\r\n    if (isCheckboxCompleted) {\r\n      this.$formCheck.classList.remove('completed');\r\n    }\r\n\r\n    this.$form.reset();\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","class Task {\r\n  constructor(name, isCompleted) {\r\n    this.id = Date.now();\r\n    this.name = name;\r\n    this.isCompleted = isCompleted;\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","class TaskFilter {\r\n  constructor() {\r\n    this.$todoContainer = document.getElementById('todoContainer');\r\n    this.name = '';\r\n  }\r\n\r\n  filterForName(todoItem) {\r\n    const isTodoItemCompleted = todoItem.classList.contains('completed');\r\n\r\n    switch (this.name) {\r\n      case 'Active':\r\n        if (isTodoItemCompleted) {\r\n          todoItem.classList.add('hidden');\r\n        }\r\n        break;\r\n\r\n      case 'Completed':\r\n        if (!isTodoItemCompleted) {\r\n          todoItem.classList.add('hidden');\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getNameToFilter(e) {\r\n    e.preventDefault();\r\n\r\n    const filterName = e.target;\r\n\r\n    this.$todoItems = Array.from(\r\n      this.$todoContainer.querySelectorAll('.todo__item')\r\n    );\r\n\r\n    this.$optionLinks = Array.from(\r\n      document.querySelectorAll('.filtering-options__link')\r\n    );\r\n\r\n    if (!filterName.textContent) {\r\n      return;\r\n    }\r\n\r\n    this.$todoItems.map((todoItem) => {\r\n      todoItem.classList.remove('hidden');\r\n\r\n      this.$optionLinks.forEach((option) =>\r\n        option.classList.remove('selected')\r\n      );\r\n\r\n      filterName.classList.add('selected');\r\n\r\n      const { textContent } = filterName;\r\n\r\n      this.name = textContent;\r\n      this.filterForName(todoItem);\r\n\r\n      return todoItem;\r\n    });\r\n  }\r\n}\r\n\r\nexport default TaskFilter;\r\n","class TodoList {\r\n  constructor() {\r\n    this.getTodoList();\r\n  }\r\n\r\n  addTask(task) {\r\n    this.todos = [...this.todos, task];\r\n    this.saveTodoList();\r\n  }\r\n\r\n  toggleTodoItemCompleted(taskId) {\r\n    this.todos = this.todos.map((task) =>\r\n      task.id === taskId ? { ...task, isCompleted: !task.isCompleted } : task\r\n    );\r\n\r\n    this.saveTodoList();\r\n  }\r\n\r\n  deleteTask(taskId) {\r\n    this.todos = this.todos.filter((task) => task.id !== taskId);\r\n    this.saveTodoList();\r\n  }\r\n\r\n  saveTodoList() {\r\n    localStorage.setItem('todos', JSON.stringify(this.todos));\r\n  }\r\n\r\n  getTodoList() {\r\n    this.todos = localStorage.getItem('todos')\r\n      ? JSON.parse(localStorage.getItem('todos'))\r\n      : [];\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","export default __webpack_public_path__ + \"assets/images/icon-cross.6ee81d30b75cab19d6f7314624fcc4d6.svg\";","import deleteIcon from '../../assets/images/icon-cross.svg';\r\n\r\nconst taskTemplate = ({ id, name, isCompleted }) => {\r\n  const $template = document.createElement('div');\r\n\r\n  $template.innerHTML = `\r\n  <div class=\"todo__item ${isCompleted ? 'completed' : ''} \" id=\"${id}\">\r\n\r\n    <div class=\"check\"></div>\r\n\r\n    <p class=\"todo__text\">${name}</p>\r\n\r\n    <img src=\"${deleteIcon}\" class=\"todo__delete\" />\r\n    \r\n  </div>`;\r\n\r\n  return $template.firstElementChild;\r\n};\r\n\r\nexport default taskTemplate;\r\n","import { Counter, DarkMode, TaskFilter, TodoList } from './classes';\r\n\r\nimport {\r\n  loadApp,\r\n  formActions,\r\n  todoListActions,\r\n  deleteCompletedTasks,\r\n} from './functions';\r\n\r\nconst states = {\r\n  todoList: new TodoList(),\r\n  taskFilter: new TaskFilter(),\r\n  counter: new Counter(),\r\n  darkMode: new DarkMode(),\r\n};\r\n\r\nconst runApp = () => {\r\n  const $form = document.getElementById('form');\r\n  const $formCheck = document.getElementById('formCheck');\r\n  const $todoContainer = document.getElementById('todoContainer');\r\n  const $btnClear = document.querySelector('.clear__link');\r\n  const $filteringOptions = document.getElementById('filteringOptions');\r\n  const $darkModeIcon = document.getElementById('darkModeIcon');\r\n\r\n  window.addEventListener('DOMContentLoaded', () => {\r\n    loadApp(states);\r\n  });\r\n\r\n  $form.addEventListener('submit', (e) => {\r\n    formActions(e, states);\r\n  });\r\n\r\n  $formCheck.addEventListener('click', (e) => {\r\n    e.target.classList.toggle('completed');\r\n  });\r\n\r\n  $todoContainer.addEventListener('click', (e) => {\r\n    todoListActions(e, states);\r\n  });\r\n\r\n  $btnClear.addEventListener('click', (e) => {\r\n    deleteCompletedTasks(e, states);\r\n  });\r\n\r\n  $filteringOptions.addEventListener('click', (e) => {\r\n    states.taskFilter.getNameToFilter(e);\r\n  });\r\n\r\n  $darkModeIcon.addEventListener('click', (e) => {\r\n    states.darkMode.toggleDarkModeIcon(e);\r\n  });\r\n};\r\n\r\nexport default runApp;\r\n","import taskTemplate from './taskTemplate';\r\n\r\nconst loadApp = ({ todoList, darkMode, counter }) => {\r\n  const $todoContainer = document.getElementById('todoContainer');\r\n\r\n  todoList.todos.forEach((task) => {\r\n    const $newTaskTemplate = taskTemplate({ ...task });\r\n    $todoContainer.insertAdjacentElement('afterbegin', $newTaskTemplate);\r\n  });\r\n\r\n  darkMode.getDarkModeState();\r\n  darkMode.getDarkModeIconState();\r\n  counter.getCounterValue();\r\n};\r\n\r\nexport default loadApp;\r\n","import { Form, Task } from '../classes';\r\nimport taskTemplate from './taskTemplate';\r\n\r\nconst formActions = (e, { todoList, counter }) => {\r\n  e.preventDefault();\r\n\r\n  const $formCheck = document.getElementById('formCheck');\r\n  const $todoContainer = document.getElementById('todoContainer');\r\n\r\n  const myForm = new Form();\r\n  const isCheckboxCompleted = $formCheck.classList.contains('completed');\r\n\r\n  const newTask = new Task(\r\n    myForm.getInputValue('todoValue'),\r\n    isCheckboxCompleted\r\n  );\r\n\r\n  todoList.addTask(newTask);\r\n  counter.incrementCounter();\r\n\r\n  const $newTaskTemplate = taskTemplate({ ...newTask });\r\n  $todoContainer.insertAdjacentElement('afterbegin', $newTaskTemplate);\r\n\r\n  myForm.reset();\r\n};\r\n\r\nexport default formActions;\r\n","const todoListActions = (e, { todoList, counter }) => {\r\n  const isCheckButton = e.target.classList.contains('check');\r\n  const isDeleteButton = e.target.classList.contains('todo__delete');\r\n\r\n  let task;\r\n  let taskId;\r\n\r\n  if (isCheckButton) {\r\n    task = e.target.parentElement;\r\n    taskId = Number(task.getAttribute('id'));\r\n\r\n    task.classList.toggle('completed');\r\n    todoList.toggleTodoItemCompleted(taskId);\r\n  } else if (isDeleteButton) {\r\n    task = e.target.parentElement;\r\n    taskId = Number(task.getAttribute('id'));\r\n\r\n    todoList.deleteTask(taskId);\r\n    counter.decrementCounter();\r\n\r\n    task.remove();\r\n  }\r\n};\r\n\r\nexport default todoListActions;\r\n","const deleteCompletedTasks = (e, { todoList, counter }) => {\r\n  e.preventDefault();\r\n\r\n  todoList.todos.forEach((task) => {\r\n    const isTaskCompleted = task.isCompleted;\r\n\r\n    if (isTaskCompleted) {\r\n      const $taskElement = document.getElementById(task.id);\r\n      $taskElement.remove();\r\n\r\n      todoList.deleteTask(task.id);\r\n      todoList.saveTodoList();\r\n      counter.decrementCounter();\r\n    }\r\n  });\r\n};\r\n\r\nexport default deleteCompletedTasks;\r\n"],"sourceRoot":""}